@charset "UTF-8";

$mq-breakpoints: (
		mobile:  480px,
		tablet:  740px,
		desktop: 980px,
		wide:    1200px
) !default;

$mq-show-breakpoints: (mobile, tablet, desktop, wide) !default;

$mq-media-type: all !default;

@function mq-get-breakpoint-width($name, $breakpoints: $mq-breakpoints) {
	@if map-has-key($breakpoints, $name) {
		@return map-get($breakpoints, $name);
	} @else {
		@warn "Breakpoint #{$name} wasn't found in $breakpoints.";
	}
}


@mixin mq(
	$from: false,
	$until: false,
	$and: false,
	$media-type: $mq-media-type,
	$breakpoints: $mq-breakpoints,
	$print: false
) {
	$min-width: 0;
	$max-width: 0;
	$media-query: '';

	// From: this breakpoint (inclusive)
	@if $from {
		@if type-of($from) == number {
			$min-width: $from;
		} @else {
			$min-width: mq-get-breakpoint-width($from, $breakpoints);
		}
	}

	// Until: that breakpoint (exclusive)
	@if $until {
		@if type-of($until) == number {
			$max-width: $until;
		} @else {
			$max-width: mq-get-breakpoint-width($until, $breakpoints) - 1px;
		}
	}

	@if $min-width != 0 { $media-query: '#{$media-query} and (min-width: #{$min-width})'; }
	@if $max-width != 0 { $media-query: '#{$media-query} and (max-width: #{$max-width})'; }
	@if $and            { $media-query: '#{$media-query} and #{$and}'; }

	// Remove unnecessary media query prefix 'all and '
	@if ($media-type == 'all' and $media-query != '') {
		$media-type: '';
		$media-query: str-slice(unquote($media-query), 6);
	}

	@if ($print == true) {
		$media-query: '#{$media-query}, print';
	}

	@media #{$media-type + $media-query} {
		@content;
	}
}